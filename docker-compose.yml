services:

  nginx:
    build:
      context: ./nginx
    container_name: nginx
    depends_on:
      - django
    environment:
      - NGINX_SERVER_NAME=${NGINX_SERVER_NAME}
      - CERTBOT_EMAIL=${CERTBOT_EMAIL}
      - CERTBOT_STAGING=${CERTBOT_STAGING}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./www:/var/www/html

  redis:
    build:
      context: ./redis
    container_name: redis
    environment:
      - REDIS_DB=${REDIS_DB}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6379:6379"

  postgres:
    build:
      context: ./postgres
    container_name: postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"

  websocket:
    build:
      context: ./websocket
    container_name: websocket
    environment:
      - WEBSOCKET_HOST=websocket
      - WEBSOCKET_PORT=8001
    ports:
      - "8001:8001"

  django:
    build:
      context: ./django
    container_name: django
    depends_on:
      - redis
      - postgres
      - websocket
    environment:
      - DJANGO_HOST=django
      - DJANGO_PORT=8000
      - DJANGO_ADMIN=${DJANGO_ADMIN}
      - DJANGO_ADMIN_EMAIL=${DJANGO_ADMIN_EMAIL}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - DJANGO_ASGI_MODULE=${DJANGO_ASGI_MODULE}
      - DJANGO_WSGI_MODULE=${DJANGO_WSGI_MODULE}
      - DJANGO_STATIC_ROOT=${DJANGO_STATIC_ROOT}
      - DJANGO_LOG_LEVEL=${DJANGO_LOG_LEVEL}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_DB=${REDIS_DB}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - WEBSOCKET_HOST=websocket
      - WEBSOCKET_PORT=8001
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py makemigrations && 
             python manage.py migrate && 
             python manage.py runserver 0.0.0.0:8000"

volumes:
  certbot-data:
